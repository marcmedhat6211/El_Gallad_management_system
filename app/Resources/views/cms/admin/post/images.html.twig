{% extends 'adminTemplate/base.html.twig' %}
{% set page_title %}Manage image gallery{% endset %}
{% import 'adminTemplate/macros.html.twig' as macros %}

{% block stylesheets %}
    {{ parent() }}
    <link href="{{ asset('admin/css/extras/animate.min.css') }}" rel="stylesheet" type="text/css">
    <link href="{{ asset('admin/js/plugins/sortable/sortable.css') }}" rel="stylesheet" type="text/css">
{% endblock stylesheets %}

{% block breadcrumb %}
    <div class="breadcrumb-line">
        <ul class="breadcrumb">
            <li><a href="{{ path('dashboard') }}"><i class="icon-home2 position-left"></i>Dashboard</a></li>
            <li><a href="{{ path(imageSetting.backRoute, {'id' : entity.id}) }}">{{ imageSetting.entityName }}</a></li>
            <li class="active">{{ page_title }}</li>
        </ul>
    </div>
{% endblock %}
{% block body %}

    <div class="tabbable panel login-form width-400">
        <div class="tab-content panel-body">
            <div class="tab-pane fade in active" id="basic-tab3">
                {% include 'cms/admin/post/imagesContent.html.twig' with { 'imageSetting':imageSetting, 'entity':post } %}
            </div>
        </div>
    </div>
{% endblock %}
{% block modalCode %}
    <div id="modal-delete" class="modal fade">
        <div class="modal-dialog modal-xs">
            <div class="modal-content bg-danger-600">
                <div class="modal-header bg-danger-600">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h6 class="modal-title">Be careful</h6>
                </div>

                <form method="post" id="change-state-form" action="#">
                    <div class="modal-body text-center">
                        <h2>Are you sure?</h2>
                        <p>Are you sure you want to delete this image?</p>
                    </div>

                    <div class="modal-footer">
                        <button type="button" id="modal-delete-bt" class="btn bg-danger-700">Delete</button>
                        <button type="reset" class="btn btn-link text-white" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
{% endblock modalCode %}
{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('admin/js/plugins/media/fancybox.min.js') }}" type="text/javascript"></script>
    <script src="{{ asset('admin/js/plugins/uploaders/fileinput/plugins/purify.min.js') }}" type="text/javascript"></script>
    <script src="{{ asset('admin/js/plugins/uploaders/fileinput/fileinput.min.js') }}" type="text/javascript"></script>
    <script src="{{ asset('admin/js/plugins/sortable/jquery-sortable.js') }}" type="text/javascript"></script>
    <script src="{{ asset('admin/js/plugins/forms/editable/editable.min.js') }}" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            function initXeditable() {
                $('.input-update-name').editable({
                    validate: function (value) {
                        if ($.trim(value) == '')
                            return 'This field is required';
                    }
                });
            }
            var sortable = $('.sorted_table').sortable({
                containerSelector: 'table',
                itemPath: '> tbody',
                itemSelector: 'tr',
                placeholder: '<tr class="placeholder"/>',
                delay: 500,
                onDrop: function ($item, container, _super) {
                    container.el.removeClass("active");
                    var data = sortable.sortable("serialize").get();

                    var jsonString = JSON.stringify(data);
                    sortable.sortable('disable');
                    $.post('{{ path('image_sort',{'post':post.id}) }}', {'json': jsonString}, function (response) {
                        sortable.sortable('enable');
                        successNotify(response.message);
                    }, 'JSON');
                    _super($item, container);
                }
            });
            $("#input-ficons-2").fileinput({
                uploadUrl: "{{ path('post_create_images' , { 'id': post.id}) }}",
                uploadAsync: true,
                dropZoneTitle: "Drag & drop images here ...",
                showUploadedThumbs: false,
                previewFileIcon: '<i class="icon icon-file"></i>',
                allowedFileExtensions: ['jpeg', 'jpg', 'gif', 'png'],
                previewThumbTags: {
                    '{TAG_VALUE}': '', // no value
                    '{TAG_CSS_NEW}': '', // new thumbnail input
                    '{TAG_CSS_INIT}': 'kv-hidden'  // hide the initial input
                },
            }).on('fileuploaded', function (event, data, previewId, index) {
                if ((data.response).length > 0) {
                    $('#noFiles').addClass('hidden');
                    $.each(data.response, function (index, value) {
                        $('#image-list').prepend(value);
                        initXeditable();
                    });
                }
            });

            //Show and Hide Multi-delete icon

            $('body').on("click", ".multi-deleted", function () {
                if ($(".multi-deleted:checked").length > 0) {
                    disableEnableMultiDeleteBtn(false);
                } else {
                    disableEnableMultiDeleteBtn(true);

                }
            });

            function disableEnableMultiDeleteBtn(disabled) {
                if (disabled) {
                    $("#selectAll").prop('checked', false);
                    $("#delete").attr('disabled', true).text("Delete");
                } else {
                    checkedCount = $('input.multi-deleted:checked').length;
                    $("#delete").attr('disabled', false).text("Delete (" + checkedCount + ")");
                }
            }

            var deleteImageId = null;
            $('body').on("click", ".delete", function (e) {
                deleteImageId = $(this).data('id');
                $('#modal-delete').modal('show');
            });

            $('#modal-delete').on('hidden.bs.modal', function () {
                deleteImageId = null;
            });

            $('body').on('click', '#modal-delete-bt', function (e) {
                e.preventDefault();

                var allVals = [];
                $("input:checkbox[name=multi-delete]:checked").each(function () {
                    allVals.push(parseInt($(this).val()));
                });

                if (typeof deleteImageId === "undefined") {
                    $.ajax({
                        type: 'POST',
                        beforeSend: function () {
                            $("#modal-delete-bt").addClass("spinner spinner-inverse spinner-sm");
                            $(":radio").attr('disabled', 'disabled');
                        },
                        complete: function () {
                            $("input:checkbox[name=multi-delete]:checked").each(function () {
                                var checkedImageVal = $(this).val();
                                $("#image-" + checkedImageVal).hide("slow", function () {
                                    $(this).remove();
                                });
                                $(":radio").removeAttr('disabled');
                                $("#modal-delete-bt").removeClass("spinner spinner-inverse spinner-sm");
                            });
                            // remove multi-delete icon
                            disableEnableMultiDeleteBtn(true)
                            allVals = [];
                        },
                        url: '{{ path('post_images_multi_delete', { 'post' : post.id }) }}',
                        data: {'ids': allVals},
                        success: function (response) {
                            if (response.error === 0) {
                                successNotify(response.message);
                            } else {
                                errorNotify(response.message);
                            }
                            $('#modal-delete').modal('hide');
                        }
                    });
                } else if (deleteImageId !== null) {
                    $.ajax({
                        type: 'POST',
                        beforeSend: function () {
                            $("#modal-delete-bt").addClass("spinner spinner-inverse spinner-sm");
                            $(":radio").attr('disabled', 'disabled');
                        },
                        complete: function () {
                            // remove this image from multi-delete checked array if checked
                            var index = allVals.indexOf(deleteImageId);
                            if (index > -1) {
                                allVals.splice(index, 1);
                            }

                            $("#image-" + deleteImageId).hide("slow", function () {
                                $(this).remove();
                            });
                            $(":radio").removeAttr('disabled');
                            $("#modal-delete-bt").removeClass("spinner spinner-inverse spinner-sm");

                            // remove multi-delete icon if removed image was the only checked image
                            if (allVals.length > 0) {
                                disableEnableMultiDeleteBtn(false);
                            } else {
                                disableEnableMultiDeleteBtn(true);

                            }
                        },
                        url: '{{ path('post_images_delete', { 'post' : post.id }) }}',
                        data: {'id': deleteImageId},
                        success: function (response) {
                            if (response.error === 0) {
                                successNotify(response.message);
                            } else {
                                errorNotify(response.message);
                            }
                            $('#modal-delete').modal('hide');
                        }
                    });
                }

            });
            $('body').on("click", ".set-main-image", function () {
                var $this = $(this);
                var imageId = $(this).val();
                var type = null;
                if (typeof ($(this).data("type")) !== 'undefined') {
                    var type = $(this).data('type');
                }
                $.ajax({
                    type: "POST",
                    url: "{{ path('post_set_image_type_ajax',{'post' : post.id}) }}",
                    beforeSend: function () {
                        $(":radio").attr('disabled', 'disabled');
                    },
                    complete: function () {
                        $(":radio").removeAttr('disabled');
                        $this.parents('.image-row').find(':radio').attr('disabled', 'disabled');
                        $this.removeAttr('disabled');
                    },
                    data: {'image_id': imageId, 'type': type},
                    success: function (result) {
                        $this.parents('.image-row').replaceWith(result.returnData);
                        successNotify(result.message);

                    }
                });
            });

            $('body').on("click", ".set-other-image", function () {
                var $this = $(this);
                var imageId = $(this).val();
                var type = null;
                if (typeof ($(this).data("type")) !== 'undefined') {
                    type = $(this).data('type');
                }
                $.ajax({
                    type: "POST",
                    url: "{{ path('post_set_image_type_ajax',{'post' : post.id}) }}",
                    beforeSend: function () {
                        $this.parents('.image-row').find(':radio').removeAttr('checked');
                    },
                    data: {'image_id': imageId, 'type': type},
                    success: function (result) {
                        $this.parents('.image-row').replaceWith(result.returnData);
                        successNotify(result.message);

                    }
                });
            });

            // Addons
            initXeditable();
            $('.input-update-name').on('shown', function (e, editable) {
                editable.input.$input.wrap('<div class="input-group"></div>');
                $('<span class="input-group-addon">.' + editable.container.options.ext + '</span>').insertAfter(editable.input.$input);
            });
            $('.input-update-name').on('save', function (e, params) {
                var data = $(this).data('editable');
                var $this = $(this);
                var imageId = data.options.pk;
                var imageName = params.newValue;
                $.ajax({
                    type: "POST",
                    url: "{{ path('post_update_image_name_ajax') }}",
                    data: {'id': imageId, 'imageName': imageName},
                    success: function (result) {
                        if (result.error == 0) {
                            successNotify(result.message);
                            $this.editable('setValue', result.imageName);

                        } else {
                            errorNotify(result.message);
                            $this.editable('setValue', result.imageName);
                        }

                    }
                });
            });

            $('body').on("click", ".update-image-alt", function () {
                var $this = $(this);
                var imageId = $this.data('id');
                var imageAlt = $this.parents('.image-row').find('.imageAlt').val();
                $.ajax({
                    type: "POST",
                    url: "{{ path('post_update_image_alt_ajax') }}",
                    data: {'id': imageId, 'imageAlt': imageAlt},
                    success: function (result) {
                        if (result.error == 0) {
                            successNotify(result.message);
                            $this.parents('.image-row').find('.imageAlt').val(result.imageAlt);

                        } else {
                            errorNotify(result.message);
                        }

                    }
                });
            });
            $("#selectAll").click(function () {
                $('input.multi-deleted').not(this).prop('checked', this.checked);
                if (this.checked == true) {
                    disableEnableMultiDeleteBtn(false);
                } else {
                    disableEnableMultiDeleteBtn(true);
                }
            });

            $('[data-popup="lightbox"]').fancybox({
                padding: 3,
                prevEffect: 'none',
                nextEffect: 'none',
            });
        });
    </script>
{% endblock %}